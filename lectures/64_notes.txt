Introduction to Maxflow
----------------------------------------------------------
Mincut problem
Input. An edge-weighted digraph, source vertex s,
and target vertex t.

Def. A st-cut(cut) is a partition of vertices into two disjoint
sets, with s in one set A and t in the other set B.

Def. Its capacity is the sum of the capacities of the edges
from A to B.

Example:
"Free world" goal. Cut supplies(if cold war turns into real war).
Government-in-power's goal. Cut off communication to set of people.


Maxflow problem
Def. An st-flow(flow) is an assignment of values to the edges
such that:
- Capacity constraint: 0 <= edge's flow <= edge's capacity.
- Local Equilibrium: inflow = outflow at every vertex(except s and t)

Def. The value of a flow is the inflow at t.

Maximum st-flow(maxflow) problem. Find a flow of maximum value.

Example:
Soviet Union goal. Maximize flow of supplies to Eastern Europe.
"Free world" goal. Maximize flow of information to specified set of people.

Summary.
Input. A weighted digraph, source vertex s and target vertex t.
Mincut problem. Find a cut of minimum capacity.
Maxflow problem. Find a flow of maximum value.





Ford–Fulkerson Algorithm
----------------------------------------------------------
Initialization. Start with 0 flows.
Augmenting path. Find an undirected path from s to t such that:
- Can increase flow on forward edges(not full).
- Can decrease flow on backward edge(not empty).


Ford–Fulkerson Algorithm
Start with 0 flow.
While where exists an augmenting path:
- find an augmenting path
- compute bottleneck capacity
- increase flow on that path by bottleneck capacity

Questions.
- How to compute a mincut
- How to find an augmenting path?
- If FF terminates, does it always compute a maxflow?
- Does FF always terminate? If so, after how many augmentations?




Maxflow–Mincut Theorem
----------------------------------------------------------
Def. The net flow across a cut(A,B) is the sum of the flows on
its edges from A to B minus the sum of flows on its edges from
B to A.

Flow-value lemma. Let f be any flow and let (A,B) be any cut.
Then, the net flow across (A,B) equals the value of f.


Maxflow–Mincut Theorem
Augmenting path theorem. A flow f is a maxflow iff no augmenting paths.
Maxflow-mincut theorem. Value of the maxflow = capacity of mincut.


To compute mincut(A,B) from maxflow f:
- By augmenting path theorem, no augmenting paths with respect
to f.
- Compute A = set of vertices connected to s by an undirected
path with no full forward or empty backward edges.



Running Time Analysis
----------------------------------------------------------











----------------------------------------------------------
----------------------------------------------------------
----------------------------------------------------------
----------------------------------------------------------