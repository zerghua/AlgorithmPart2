Introduction to Substring Search
----------------------------------------------------------
Goal. Find pattern of length M in a text of length N.

substring search applications.
Screen scraping. Extract relevant data from web page.
Ex. Find string delimited by <b> and </b> after first
occurrence of pattern Last Trade.




Brute-Force Substring Search
----------------------------------------------------------
public static int search(String pat, String txt){
    int M = pat.length();
    int N = txt.length();
    for(int i=0; i<= N ; i++){
        int j;
        for(j = 0; j<M; j++){
            if(txt.charAt(i+j) != pat.charAt(j)) break;
        }
        if(j == M) return i;    // found
    }
    return N; // not found
}


can be slow if txt and pattern are repetitive.


Backup
In many applications, we want to avoid backup in next stream.
- Treat input as stream of data.
- Abstract model: standard input.

Brute force algorithm needs to backup for every mismatch.

Approach 1. Maintain buffer of last M characters.

best case is M, worse case is M*N





Knuth–Morris–Pratt
----------------------------------------------------------


----------------------------------------------------------


----------------------------------------------------------


----------------------------------------------------------


----------------------------------------------------------


----------------------------------------------------------





